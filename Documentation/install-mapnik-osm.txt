# This is a start for an (almost) cut'n past installation description for mapnik-osm-renderer

# ------ Install some stuff
# Maybe not all is needed, but with these it work ....
  sudo apt-get install \
                build-essential libfreetype6-dev libltdl3-dev \
                libpng12-dev  libtiff4-dev libboost-thread-dev\
                libboost-filesystem-dev \
                libboost-serialization-dev libboost-regex-dev\
                libboost-python-dev  proj python-imaging scons \
                libboost-program-options-dev postgresql-doc-8.1 \
                postgresql-8.1 postgresql-8.1-plruby \
                postgresql-client-8.1 postgresql-contrib-8.1\
                postgresql-plperl-8.1 postgresql-plpython-8.1 \
                postgresql-server-dev-8.1 postgresql-8.1-postgis \
                libboost-python-dev python2.4-dev \
                libwww-perl libxml-parser-perl libfile-slurp-perl \


# ------------ Downloads
 # Download is (600MB) (once)
  wget http://artem.dev.openstreetmap.org/files/world_boundaries.tar.bz2 \
	 -O ~/osm/world_boundaries.tar.bz2

  # Download is (80MB) (Weekly)
  wget http://www.gpsdrive.de/osm/mapnik-osm-gis.sql.gz \
        -O  ~/osm/mapnik-osm-gis.sql.gz

# ------- World Boundaries
 # unpacking is an additional 1.2GB
 sudo mkdir -p /usr/share/mapnik
 cd /usr/share/mapnik
 sudo tar -xvjf ~/osm/world_boundaries.tar.bz2

# ----------- Create Database Import the dump from http://www.gpsdrive.de/osm/
  sudo -u postgres createdb -Upostgres  -EUTF8 gis  
  sudo -u postgres createuser -Upostgres -S -D -R osm
  echo "GRANT ALL ON SCHEMA PUBLIC TO \"osm\";" | sudo -u postgres psql -Upostgres gis
  gunzip -dc ~/osm/mapnik-osm-gis.sql.gz | \
        sed "s/tweety/osm/g" | \
	sudo -u postgres psql -Upostgres gis | \
	grep -v -e "ALTER FUNCTION" -e "CREATE FUNCTION" -e "DROP FUNCTION"

 # ------------ GRANT Rights
  # Everyone on the system is allowed to read the new tables
  for table in  planet_osm_roads planet_osm_polygon planet_osm_line \
                planet_osm_point spatial_ref_sys geometry_columns ; do \
       echo "GRANT SELECT ON $table TO PUBLIC;" ;\
  done | sudo -u postgres psql -Upostgres gis 

 # ------------ Test if you can read the Database
  echo "SELECT * from planet_osm_polygon LIMIT 2;" |  psql  gis -h /var/run/postgresql


# ---------- And now, we start the rendering
  export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
  # render  Munich:
  python2.5 /usr/bin/gpsdrive_mapnik_gentiles.py -b  11.4,48.07,11.7,48.2 -s 10-16
  # Rest of the world ;-)
  python2.5 /usr/bin/gpsdrive_mapnik_gentiles.py -b "-180.0,-90.0,180.0,90.0" -s 1-6
